Сайт, где люди могут зарегистрироваться, искать фильмы по названию и добавлять их в избранное.

Страницы:
/signup - регистрация
- Пользователь вводит username и пароль и регистрируется

/login - вход
- Пользователь вводит username и пароль и авторизуется

/ - главная странице
- На главной странице список трендовых фильмов (запрос отправляется на сервер и с него на API - https://developer.themoviedb.org/reference/trending-movies)
- На каждом фильме есть кнопка, при нажатии которой фильм добавляется в избранное. Если фильм уже в избранном, то нажатие на кнопку удалит его из избранного
- Наверху страницы форма для поиска. При поиске фильма по названию запрос также отправляется на сервер, и с него на API - https://developer.themoviedb.org/reference/search-movie

/favorites - избранное
Как и главная страница, но только вместо трендовых фильмов только те, которые были добавленные в избранное и без поиска

Технологии:
- Node.js и Express)
- БД использовал PostgreSQL
- TMDB API для фильмов - https://developer.themoviedb.org/docs/getting-started
- Фронтенд - HTML, CSS ну и чистый JavaScript

В БД у тебя будут таблицы для пользователей и таблица favorites - в favorites ты хранишь ID фильмов из TMDB API, название фильмов итд хранить там не надо. Имея в БД айдишники фильмов, которые пользователь добавил в избранное ты сможешь с сервера послать запрос на API с этими айдишниками и получить инфу об этих фильмах


  <!-- <script>
    const loginForm = document.getElementById('login-form');
    const registrationForm = document.getElementById('registration-form');
    const registerBtn = document.querySelector('.register-btn');
    const toggleText = document.querySelector('.toggle-text');
    const mainPageContainer = document.getElementById('main-page-container');

    let showRegistrationForm = false;

    registerBtn.addEventListener('click', () => {
      showRegistrationForm = !showRegistrationForm;
      loginForm.classList.toggle('active');
      registrationForm.classList.toggle('active');
      toggleText.textContent = showRegistrationForm ? 'Login' : 'Register';
    });

    document.getElementById('login-form').addEventListener('submit', async (event) => {
      event.preventDefault();
      
      const formData = new FormData(loginForm)
      const username = formData.get('username')
      const password = formData.get('password')

      try {
        const response = await fetch('/login', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ username, password })
        })

        if (response.ok) {
          // If login is successful, show the main page
          mainPageContainer.classList.add('active')
          loginForm.classList.remove('active')
          registrationForm.classList.remove('active')
        } else {
          console.error('Login failed:', response.statusText);
        }
      } catch (error) {
        console.error('Error during login:', error)
      }
    });
  </script> -->

