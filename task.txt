Сайт, где люди могут зарегистрироваться, искать фильмы по названию и добавлять их в избранное.

Страницы:
/signup - регистрация
- Пользователь вводит username и пароль и регистрируется

/login - вход
- Пользователь вводит username и пароль и авторизуется

/ - главная странице
- На главной странице список трендовых фильмов (запрос отправляется на сервер и с него на API - https://developer.themoviedb.org/reference/trending-movies)
- На каждом фильме есть кнопка, при нажатии которой фильм добавляется в избранное. Если фильм уже в избранном, то нажатие на кнопку удалит его из избранного
- Наверху страницы форма для поиска. При поиске фильма по названию запрос также отправляется на сервер, и с него на API - https://developer.themoviedb.org/reference/search-movie

/favorites - избранное
Как и главная страница, но только вместо трендовых фильмов только те, которые были добавленные в избранное и без поиска

Технологии:
- Node.js (можешь юзать Express или любой другой фреймворк)
- БД (можно mongodb, но я бы рекомендовал SQL - MySQL или Postgres, решай сам)
- TMDB API для фильмов - https://developer.themoviedb.org/docs/getting-started
- Фронтенд - HTML, CSS (рекомендую https://tailwindcss.com/) ну и чистый JavaScript

В БД у тебя будут таблицы для пользователей и таблица favorites - в favorites ты хранишь ID фильмов из TMDB API, название фильмов итд хранить там не надо. Имея в БД айдишники фильмов, которые пользователь добавил в избранное ты сможешь с сервера послать запрос на API с этими айдишниками и получить инфу об этих фильмах


app.post('/register', (req, res) => {
  const { username, email, password } = req.body;

  pool.query('SELECT FROM users WHERE username = $1 OR email = $2', [username, password], (err, results) => {
    if (err) {
      console.error('Error during executing the request', err)
      res.status(500).json({ error: "Error during new user's registration"})
    } else {
       // If user with the same username or email exists, give error
      if (results.rows.length > 0) {
        res.status(400).json({ error: 'User with these username or email already registered'})
      } else {
        pool.query('INSERT INTO users (username, password, email) VALUES ($1, $2, $3)', [username, password, email], (err, results) => {
          if (err) {
            console.error('Error during registratin of new user', err)
            res.status(500).json({ error: 'Error during registration of new user'})
          } else {
            res.send('Registration is successful!')
          }
        })
      }
    }
  })
})